using UnityEngine;


public class Player : MonoBehaviour
{
    [SerializeField] private float speed;
    [SerializeField] private float jumpHight;

    private Rigidbody2D rb;
    private Animator animator;

    private bool grounded = true;
    private bool wasRunning;
    private bool isDead;

    public float Speed { get => speed; }

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        animator = GetComponent<Animator>();
    }

    void Update()
    {
        if (isDead) { return; }

        if (Input.GetAxis("Horizontal") != 0)
        {
            Move();
        }
        else if (wasRunning)
        {
            wasRunning = false;
            animator.SetBool("Run", false);
        }

        if (Input.GetKeyDown(KeyCode.Space) && grounded)
        {
            Jump();
        }
    }

    private void Jump()
    {
        AnimateJump();

        rb.velocity = new Vector2(0, jumpHight);
    }

    private void AnimateJump()
    {
        animator.SetTrigger("StopAction");
        animator.ResetTrigger("StopAction");
        animator.SetTrigger("Jump");
    }

    private void OnCollisionEnter2D(Collision2D collision)
    {
        if (collision.gameObject.tag == "Ground")
        {
            if (!grounded)
            {
                animator.ResetTrigger("Jump");
                animator.SetTrigger("Landing");
            }

            grounded = true;
        }
    }

    private void OnCollisionExit2D(Collision2D collision)
    {
        grounded = false;

        AnimateJump();
    }

    private void Move()
    {
        wasRunning = true;

        float direction = Input.GetAxis("Horizontal");
        if (direction > 0)
        {
            GetComponent<SpriteRenderer>().flipX = false;
        }
        else if (direction < 0)
        {
           GetComponent<SpriteRenderer>().flipX = true;
        }

        float step = speed * Time.deltaTime;

        animator.SetBool("Run", grounded);

        transform.position = Vector2.MoveTowards(transform.position,
            new Vector2(transform.position.x + direction * step, transform.position.y), step);
    }

    public void Dead()
    {
        if (isDead) { return; }

        isDead = true;
        animator.SetBool("Run", false);

        animator.SetTrigger("StopAction");
        animator.SetInteger("Hurt", 1);

    }
}
